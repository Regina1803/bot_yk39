import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils import executor
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    markup = InlineKeyboardMarkup(row_width=2)
    
    # –ö–Ω–æ–ø–∫–∞ "–í—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è" —Å —Å—Å—ã–ª–∫–æ–π
    item1 = InlineKeyboardButton("–í—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è", url="https://zastroyschiki39.ru/flats")
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"
    item2 = InlineKeyboardButton("–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏", url="https://zastroyschiki39.ru/read")
    
    markup.add(item1, item2)
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=markup)

# üîπ –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Chat ID üîπ
@dp.message_handler(content_types=types.ContentType.TEXT)
async def get_chat_id(message: types.Message):
    await message.answer(f"Chat ID —ç—Ç–æ–π –±–µ—Å–µ–¥—ã: {message.chat.id}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
